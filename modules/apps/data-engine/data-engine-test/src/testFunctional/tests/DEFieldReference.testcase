@component-name = "data-engine"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Data Engine";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LRQA-68737. This test verifies that the field reference can be edited."
	@priority = "5"
	test CanBeEdited {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DEStructure.addField(
			fieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		DEStructure.editFieldReference(
			fieldLabel = "Text",
			fieldReference = "TextReference");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		DEStructure.assertFieldReference(
			fieldLabel = "Text",
			fieldReference = "TextReference");
	}

	@description = "This is a test for LRQA-68737. This test verifies that the field reference can not be blank."
	@priority = "5"
	test CanNotBeBlank {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DEStructure.addField(
			fieldLabel = "Text",
			fieldName = "Text");

		var originalFieldReference = DEStructure.getFieldReference(fieldLabel = "Text");

		DEStructure.editFieldReference(
			fieldLabel = "Text",
			fieldReference = "");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		DEStructure.assertFieldReference(
			fieldLabel = "Text",
			fieldReference = "${originalFieldReference}");
	}

	@description = "This is a test for LRQA-68737. This test verifies that the field reference can not be the same for two fields."
	@priority = "5"
	test CanNotBeTheSameForTwoFields {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DEStructure.addField(
			fieldLabel = "First Text",
			fieldName = "Text");

		DEStructure.editFieldReference(
			fieldLabel = "First Text",
			fieldReference = "TextReference");

		DEStructure.addField(
			fieldLabel = "Second Text",
			fieldName = "Text");

		var originalFieldReference = DEStructure.getFieldReference(fieldLabel = "Second Text");

		DEStructure.editFieldReference(
			assertErrorMessage = "This reference is already being used. Try a different one.",
			fieldLabel = "Second Text",
			fieldReference = "TextReference");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		DEStructure.assertFieldReference(
			fieldLabel = "Second Text",
			fieldReference = "${originalFieldReference}");
	}

}