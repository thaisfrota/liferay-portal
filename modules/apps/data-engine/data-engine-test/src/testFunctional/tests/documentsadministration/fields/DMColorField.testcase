@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMNavigator.gotoDocumentType();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			User.logoutPG();
		}
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "5"
	test AddColorFieldByDragAndDrop {
		property portal.acceptance = "false";

		// TODO LPS-98070 AddColorFieldByDragAndDrop pending implementation

	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "5"
	test DeleteColorFieldOnBuilder {
		property portal.acceptance = "false";

		// TODO LPS-98070 DeleteColorFieldOnBuilder pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "4"
	test DisableSearchablePropertyOfColorField {
		property portal.acceptance = "false";

		// TODO LPS-98070 DisableSearchablePropertyOfColorField pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@priority = "4"
	test DuplicateColorFieldOnBuilder {
		property portal.acceptance = "false";

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Color",
			dmDocumentTypeName = "DM Document Type Name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Type Name");

		DataEngine.duplicateField(fieldFieldLabel = "Color");

		DDLDataDefinition.save();

		NavItem.click(navItem = "Documents and Media");

		DMNavigator.gotoAddDocumentTypeCP(dmDocumentTypeName = "DM Document Type Name");

		AssertElementPresent(
			key_fieldFieldLabel = "Color",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertElementPresent(
			key_fieldFieldLabel = "Copy of Color",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "3"
	test EditColorFieldNameWithInvalidCharacters {
		property portal.acceptance = "false";

		// TODO LPS-98070 EditColorFieldNameWithInvalidCharacters pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "4"
	test EditColorFieldNameWithValidCharacters {
		property portal.acceptance = "false";

		// TODO LPS-98070 EditColorFieldNameWithValidCharacters pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "4"
	test EditHelpTextOfColorField {
		property portal.acceptance = "false";

		// TODO LPS-98070 EditHelpTextOfColorField pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "5"
	test EditLabelOfColorField {
		property portal.acceptance = "false";

		// TODO LPS-98070 EditLabelOfColorField pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "4"
	test SetColorFieldAsRequired {
		property portal.acceptance = "false";

		// TODO LPS-98070 SetColorFieldAsRequired pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "5"
	test SetColorWithHex {
		property portal.acceptance = "false";

		// TODO LPS-98070 SetColorWithHex pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "5"
	test SetColorWithPicker {
		property portal.acceptance = "false";

		// TODO LPS-98070 SetColorWithPicker pending implementation
	}

	@description = "This is a test for LPS-98070. As a Developer, I want to Implement the color field type"
	@ignore = "true"
	@priority = "4"
	test SetSearchablePropertyOfColorField {
		property portal.acceptance = "false";

		// TODO LPS-98070 SetSearchablePropertyOfColorField pending implementation
	}

}